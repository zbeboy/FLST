/*
 * This file is generated by jOOQ.
*/
package cn.edu.kmust.flst.domain.information_schema.tables;


import cn.edu.kmust.flst.domain.information_schema.InformationSchema;
import cn.edu.kmust.flst.domain.information_schema.tables.records.RightsRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Rights extends TableImpl<RightsRecord> {

    private static final long serialVersionUID = -1133990909;

    /**
     * The reference instance of <code>information_schema.rights</code>
     */
    public static final Rights RIGHTS = new Rights();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RightsRecord> getRecordType() {
        return RightsRecord.class;
    }

    /**
     * The column <code>information_schema.rights.grantee</code>.
     */
    public final TableField<RightsRecord, String> GRANTEE = createField("grantee", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.rights.granteetype</code>.
     */
    public final TableField<RightsRecord, String> GRANTEETYPE = createField("granteetype", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.rights.grantedrole</code>.
     */
    public final TableField<RightsRecord, String> GRANTEDROLE = createField("grantedrole", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.rights.rights</code>.
     */
    public final TableField<RightsRecord, String> RIGHTS_ = createField("rights", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.rights.table_schema</code>.
     */
    public final TableField<RightsRecord, String> TABLE_SCHEMA = createField("table_schema", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.rights.table_name</code>.
     */
    public final TableField<RightsRecord, String> TABLE_NAME = createField("table_name", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.rights.id</code>.
     */
    public final TableField<RightsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>information_schema.rights</code> table reference
     */
    public Rights() {
        this(DSL.name("rights"), null);
    }

    /**
     * Create an aliased <code>information_schema.rights</code> table reference
     */
    public Rights(String alias) {
        this(DSL.name(alias), RIGHTS);
    }

    /**
     * Create an aliased <code>information_schema.rights</code> table reference
     */
    public Rights(Name alias) {
        this(alias, RIGHTS);
    }

    private Rights(Name alias, Table<RightsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Rights(Name alias, Table<RightsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rights as(String alias) {
        return new Rights(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rights as(Name alias) {
        return new Rights(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Rights rename(String name) {
        return new Rights(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Rights rename(Name name) {
        return new Rights(name, null);
    }
}
