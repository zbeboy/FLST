/*
 * This file is generated by jOOQ.
*/
package cn.edu.kmust.flst.domain.information_schema.tables;


import cn.edu.kmust.flst.domain.information_schema.InformationSchema;
import cn.edu.kmust.flst.domain.information_schema.tables.records.ConstraintsRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Constraints extends TableImpl<ConstraintsRecord> {

    private static final long serialVersionUID = -363525014;

    /**
     * The reference instance of <code>information_schema.constraints</code>
     */
    public static final Constraints CONSTRAINTS = new Constraints();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ConstraintsRecord> getRecordType() {
        return ConstraintsRecord.class;
    }

    /**
     * The column <code>information_schema.constraints.constraint_catalog</code>.
     */
    public final TableField<ConstraintsRecord, String> CONSTRAINT_CATALOG = createField("constraint_catalog", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.constraints.constraint_schema</code>.
     */
    public final TableField<ConstraintsRecord, String> CONSTRAINT_SCHEMA = createField("constraint_schema", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.constraints.constraint_name</code>.
     */
    public final TableField<ConstraintsRecord, String> CONSTRAINT_NAME = createField("constraint_name", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.constraints.constraint_type</code>.
     */
    public final TableField<ConstraintsRecord, String> CONSTRAINT_TYPE = createField("constraint_type", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.constraints.table_catalog</code>.
     */
    public final TableField<ConstraintsRecord, String> TABLE_CATALOG = createField("table_catalog", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.constraints.table_schema</code>.
     */
    public final TableField<ConstraintsRecord, String> TABLE_SCHEMA = createField("table_schema", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.constraints.table_name</code>.
     */
    public final TableField<ConstraintsRecord, String> TABLE_NAME = createField("table_name", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.constraints.unique_index_name</code>.
     */
    public final TableField<ConstraintsRecord, String> UNIQUE_INDEX_NAME = createField("unique_index_name", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.constraints.check_expression</code>.
     */
    public final TableField<ConstraintsRecord, String> CHECK_EXPRESSION = createField("check_expression", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.constraints.column_list</code>.
     */
    public final TableField<ConstraintsRecord, String> COLUMN_LIST = createField("column_list", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.constraints.remarks</code>.
     */
    public final TableField<ConstraintsRecord, String> REMARKS = createField("remarks", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.constraints.sql</code>.
     */
    public final TableField<ConstraintsRecord, String> SQL = createField("sql", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.constraints.id</code>.
     */
    public final TableField<ConstraintsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>information_schema.constraints</code> table reference
     */
    public Constraints() {
        this(DSL.name("constraints"), null);
    }

    /**
     * Create an aliased <code>information_schema.constraints</code> table reference
     */
    public Constraints(String alias) {
        this(DSL.name(alias), CONSTRAINTS);
    }

    /**
     * Create an aliased <code>information_schema.constraints</code> table reference
     */
    public Constraints(Name alias) {
        this(alias, CONSTRAINTS);
    }

    private Constraints(Name alias, Table<ConstraintsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Constraints(Name alias, Table<ConstraintsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Constraints as(String alias) {
        return new Constraints(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Constraints as(Name alias) {
        return new Constraints(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Constraints rename(String name) {
        return new Constraints(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Constraints rename(Name name) {
        return new Constraints(name, null);
    }
}
