/*
 * This file is generated by jOOQ.
*/
package cn.edu.kmust.flst.domain.public_.tables;


import cn.edu.kmust.flst.domain.public_.Indexes;
import cn.edu.kmust.flst.domain.public_.Keys;
import cn.edu.kmust.flst.domain.public_.Public;
import cn.edu.kmust.flst.domain.public_.tables.records.FriendlyLinkRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FriendlyLink extends TableImpl<FriendlyLinkRecord> {

    private static final long serialVersionUID = -1693695533;

    /**
     * The reference instance of <code>public.friendly_link</code>
     */
    public static final FriendlyLink FRIENDLY_LINK = new FriendlyLink();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FriendlyLinkRecord> getRecordType() {
        return FriendlyLinkRecord.class;
    }

    /**
     * The column <code>public.friendly_link.link_id</code>.
     */
    public final TableField<FriendlyLinkRecord, String> LINK_ID = createField("link_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>public.friendly_link.link_name</code>.
     */
    public final TableField<FriendlyLinkRecord, String> LINK_NAME = createField("link_name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>public.friendly_link.link_name_en</code>.
     */
    public final TableField<FriendlyLinkRecord, String> LINK_NAME_EN = createField("link_name_en", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>public.friendly_link.link_url</code>.
     */
    public final TableField<FriendlyLinkRecord, String> LINK_URL = createField("link_url", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>public.friendly_link.link_show</code>.
     */
    public final TableField<FriendlyLinkRecord, Boolean> LINK_SHOW = createField("link_show", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>public.friendly_link</code> table reference
     */
    public FriendlyLink() {
        this(DSL.name("friendly_link"), null);
    }

    /**
     * Create an aliased <code>public.friendly_link</code> table reference
     */
    public FriendlyLink(String alias) {
        this(DSL.name(alias), FRIENDLY_LINK);
    }

    /**
     * Create an aliased <code>public.friendly_link</code> table reference
     */
    public FriendlyLink(Name alias) {
        this(alias, FRIENDLY_LINK);
    }

    private FriendlyLink(Name alias, Table<FriendlyLinkRecord> aliased) {
        this(alias, aliased, null);
    }

    private FriendlyLink(Name alias, Table<FriendlyLinkRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRIMARY_KEY_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FriendlyLinkRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FriendlyLinkRecord>> getKeys() {
        return Arrays.<UniqueKey<FriendlyLinkRecord>>asList(Keys.CONSTRAINT_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FriendlyLink as(String alias) {
        return new FriendlyLink(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FriendlyLink as(Name alias) {
        return new FriendlyLink(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FriendlyLink rename(String name) {
        return new FriendlyLink(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FriendlyLink rename(Name name) {
        return new FriendlyLink(name, null);
    }
}
