/*
 * This file is generated by jOOQ.
*/
package cn.edu.kmust.flst.domain.information_schema.tables;


import cn.edu.kmust.flst.domain.information_schema.InformationSchema;
import cn.edu.kmust.flst.domain.information_schema.tables.records.IndexesRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes extends TableImpl<IndexesRecord> {

    private static final long serialVersionUID = 32002585;

    /**
     * The reference instance of <code>information_schema.indexes</code>
     */
    public static final Indexes INDEXES = new Indexes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IndexesRecord> getRecordType() {
        return IndexesRecord.class;
    }

    /**
     * The column <code>information_schema.indexes.table_catalog</code>.
     */
    public final TableField<IndexesRecord, String> TABLE_CATALOG = createField("table_catalog", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.indexes.table_schema</code>.
     */
    public final TableField<IndexesRecord, String> TABLE_SCHEMA = createField("table_schema", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.indexes.table_name</code>.
     */
    public final TableField<IndexesRecord, String> TABLE_NAME = createField("table_name", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.indexes.non_unique</code>.
     */
    public final TableField<IndexesRecord, Boolean> NON_UNIQUE = createField("non_unique", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>information_schema.indexes.index_name</code>.
     */
    public final TableField<IndexesRecord, String> INDEX_NAME = createField("index_name", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.indexes.ordinal_position</code>.
     */
    public final TableField<IndexesRecord, Short> ORDINAL_POSITION = createField("ordinal_position", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>information_schema.indexes.column_name</code>.
     */
    public final TableField<IndexesRecord, String> COLUMN_NAME = createField("column_name", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.indexes.cardinality</code>.
     */
    public final TableField<IndexesRecord, Integer> CARDINALITY = createField("cardinality", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>information_schema.indexes.primary_key</code>.
     */
    public final TableField<IndexesRecord, Boolean> PRIMARY_KEY = createField("primary_key", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>information_schema.indexes.index_type_name</code>.
     */
    public final TableField<IndexesRecord, String> INDEX_TYPE_NAME = createField("index_type_name", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.indexes.is_generated</code>.
     */
    public final TableField<IndexesRecord, Boolean> IS_GENERATED = createField("is_generated", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>information_schema.indexes.index_type</code>.
     */
    public final TableField<IndexesRecord, Short> INDEX_TYPE = createField("index_type", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>information_schema.indexes.asc_or_desc</code>.
     */
    public final TableField<IndexesRecord, String> ASC_OR_DESC = createField("asc_or_desc", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.indexes.pages</code>.
     */
    public final TableField<IndexesRecord, Integer> PAGES = createField("pages", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>information_schema.indexes.filter_condition</code>.
     */
    public final TableField<IndexesRecord, String> FILTER_CONDITION = createField("filter_condition", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.indexes.remarks</code>.
     */
    public final TableField<IndexesRecord, String> REMARKS = createField("remarks", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.indexes.sql</code>.
     */
    public final TableField<IndexesRecord, String> SQL = createField("sql", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.indexes.id</code>.
     */
    public final TableField<IndexesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>information_schema.indexes.sort_type</code>.
     */
    public final TableField<IndexesRecord, Integer> SORT_TYPE = createField("sort_type", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>information_schema.indexes.constraint_name</code>.
     */
    public final TableField<IndexesRecord, String> CONSTRAINT_NAME = createField("constraint_name", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.indexes.index_class</code>.
     */
    public final TableField<IndexesRecord, String> INDEX_CLASS = createField("index_class", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.indexes.affinity</code>.
     */
    public final TableField<IndexesRecord, Boolean> AFFINITY = createField("affinity", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * Create a <code>information_schema.indexes</code> table reference
     */
    public Indexes() {
        this(DSL.name("indexes"), null);
    }

    /**
     * Create an aliased <code>information_schema.indexes</code> table reference
     */
    public Indexes(String alias) {
        this(DSL.name(alias), INDEXES);
    }

    /**
     * Create an aliased <code>information_schema.indexes</code> table reference
     */
    public Indexes(Name alias) {
        this(alias, INDEXES);
    }

    private Indexes(Name alias, Table<IndexesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Indexes(Name alias, Table<IndexesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Indexes as(String alias) {
        return new Indexes(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Indexes as(Name alias) {
        return new Indexes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Indexes rename(String name) {
        return new Indexes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Indexes rename(Name name) {
        return new Indexes(name, null);
    }
}
