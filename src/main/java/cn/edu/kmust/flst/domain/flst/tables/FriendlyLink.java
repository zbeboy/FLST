/*
 * This file is generated by jOOQ.
*/
package cn.edu.kmust.flst.domain.flst.tables;


import cn.edu.kmust.flst.domain.flst.Flst;
import cn.edu.kmust.flst.domain.flst.Indexes;
import cn.edu.kmust.flst.domain.flst.Keys;
import cn.edu.kmust.flst.domain.flst.tables.records.FriendlyLinkRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FriendlyLink extends TableImpl<FriendlyLinkRecord> {

    private static final long serialVersionUID = 268118174;

    /**
     * The reference instance of <code>FLST.FRIENDLY_LINK</code>
     */
    public static final FriendlyLink FRIENDLY_LINK = new FriendlyLink();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FriendlyLinkRecord> getRecordType() {
        return FriendlyLinkRecord.class;
    }

    /**
     * The column <code>FLST.FRIENDLY_LINK.LINK_ID</code>.
     */
    public final TableField<FriendlyLinkRecord, String> LINK_ID = createField("LINK_ID", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>FLST.FRIENDLY_LINK.LINK_NAME</code>.
     */
    public final TableField<FriendlyLinkRecord, String> LINK_NAME = createField("LINK_NAME", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>FLST.FRIENDLY_LINK.LINK_NAME_EN</code>.
     */
    public final TableField<FriendlyLinkRecord, String> LINK_NAME_EN = createField("LINK_NAME_EN", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>FLST.FRIENDLY_LINK.LINK_URL</code>.
     */
    public final TableField<FriendlyLinkRecord, String> LINK_URL = createField("LINK_URL", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>FLST.FRIENDLY_LINK.LINK_SHOW</code>.
     */
    public final TableField<FriendlyLinkRecord, Boolean> LINK_SHOW = createField("LINK_SHOW", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>FLST.FRIENDLY_LINK</code> table reference
     */
    public FriendlyLink() {
        this(DSL.name("FRIENDLY_LINK"), null);
    }

    /**
     * Create an aliased <code>FLST.FRIENDLY_LINK</code> table reference
     */
    public FriendlyLink(String alias) {
        this(DSL.name(alias), FRIENDLY_LINK);
    }

    /**
     * Create an aliased <code>FLST.FRIENDLY_LINK</code> table reference
     */
    public FriendlyLink(Name alias) {
        this(alias, FRIENDLY_LINK);
    }

    private FriendlyLink(Name alias, Table<FriendlyLinkRecord> aliased) {
        this(alias, aliased, null);
    }

    private FriendlyLink(Name alias, Table<FriendlyLinkRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Flst.FLST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRIMARY_KEY_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FriendlyLinkRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FriendlyLinkRecord>> getKeys() {
        return Arrays.<UniqueKey<FriendlyLinkRecord>>asList(Keys.CONSTRAINT_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FriendlyLink as(String alias) {
        return new FriendlyLink(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FriendlyLink as(Name alias) {
        return new FriendlyLink(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FriendlyLink rename(String name) {
        return new FriendlyLink(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FriendlyLink rename(Name name) {
        return new FriendlyLink(name, null);
    }
}
