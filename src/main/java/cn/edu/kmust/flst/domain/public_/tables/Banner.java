/*
 * This file is generated by jOOQ.
*/
package cn.edu.kmust.flst.domain.public_.tables;


import cn.edu.kmust.flst.domain.public_.Indexes;
import cn.edu.kmust.flst.domain.public_.Keys;
import cn.edu.kmust.flst.domain.public_.Public;
import cn.edu.kmust.flst.domain.public_.tables.records.BannerRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Banner extends TableImpl<BannerRecord> {

    private static final long serialVersionUID = 1880891466;

    /**
     * The reference instance of <code>public.banner</code>
     */
    public static final Banner BANNER = new Banner();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BannerRecord> getRecordType() {
        return BannerRecord.class;
    }

    /**
     * The column <code>public.banner.banner_id</code>.
     */
    public final TableField<BannerRecord, Integer> BANNER_ID = createField("banner_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.banner.banner_link</code>.
     */
    public final TableField<BannerRecord, String> BANNER_LINK = createField("banner_link", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>public.banner.banner_date</code>.
     */
    public final TableField<BannerRecord, Timestamp> BANNER_DATE = createField("banner_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.banner.banner_show</code>.
     */
    public final TableField<BannerRecord, Boolean> BANNER_SHOW = createField("banner_show", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.banner.banner_title</code>.
     */
    public final TableField<BannerRecord, String> BANNER_TITLE = createField("banner_title", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>public.banner.banner_title_en</code>.
     */
    public final TableField<BannerRecord, String> BANNER_TITLE_EN = createField("banner_title_en", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.banner.banner_brief</code>.
     */
    public final TableField<BannerRecord, String> BANNER_BRIEF = createField("banner_brief", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.banner.banner_brief_en</code>.
     */
    public final TableField<BannerRecord, String> BANNER_BRIEF_EN = createField("banner_brief_en", org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>public.banner.menu_id</code>.
     */
    public final TableField<BannerRecord, String> MENU_ID = createField("menu_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>public.banner.banner_creator</code>.
     */
    public final TableField<BannerRecord, String> BANNER_CREATOR = createField("banner_creator", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * Create a <code>public.banner</code> table reference
     */
    public Banner() {
        this(DSL.name("banner"), null);
    }

    /**
     * Create an aliased <code>public.banner</code> table reference
     */
    public Banner(String alias) {
        this(DSL.name(alias), BANNER);
    }

    /**
     * Create an aliased <code>public.banner</code> table reference
     */
    public Banner(Name alias) {
        this(alias, BANNER);
    }

    private Banner(Name alias, Table<BannerRecord> aliased) {
        this(alias, aliased, null);
    }

    private Banner(Name alias, Table<BannerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CONSTRAINT_INDEX_7, Indexes.CONSTRAINT_INDEX_74, Indexes.PRIMARY_KEY_7);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BannerRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BANNER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BannerRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_7;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BannerRecord>> getKeys() {
        return Arrays.<UniqueKey<BannerRecord>>asList(Keys.CONSTRAINT_7);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<BannerRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BannerRecord, ?>>asList(Keys.CONSTRAINT_74, Keys.CONSTRAINT_745);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Banner as(String alias) {
        return new Banner(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Banner as(Name alias) {
        return new Banner(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Banner rename(String name) {
        return new Banner(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Banner rename(Name name) {
        return new Banner(name, null);
    }
}
