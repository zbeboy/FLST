/*
 * This file is generated by jOOQ.
*/
package cn.edu.kmust.flst.domain.information_schema.tables;


import cn.edu.kmust.flst.domain.information_schema.InformationSchema;
import cn.edu.kmust.flst.domain.information_schema.tables.records.TypeInfoRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TypeInfo extends TableImpl<TypeInfoRecord> {

    private static final long serialVersionUID = -84217340;

    /**
     * The reference instance of <code>information_schema.type_info</code>
     */
    public static final TypeInfo TYPE_INFO = new TypeInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TypeInfoRecord> getRecordType() {
        return TypeInfoRecord.class;
    }

    /**
     * The column <code>information_schema.type_info.type_name</code>.
     */
    public final TableField<TypeInfoRecord, String> TYPE_NAME = createField("type_name", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.type_info.data_type</code>.
     */
    public final TableField<TypeInfoRecord, Integer> DATA_TYPE = createField("data_type", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>information_schema.type_info.precision</code>.
     */
    public final TableField<TypeInfoRecord, Integer> PRECISION = createField("precision", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>information_schema.type_info.prefix</code>.
     */
    public final TableField<TypeInfoRecord, String> PREFIX = createField("prefix", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.type_info.suffix</code>.
     */
    public final TableField<TypeInfoRecord, String> SUFFIX = createField("suffix", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.type_info.params</code>.
     */
    public final TableField<TypeInfoRecord, String> PARAMS = createField("params", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.type_info.auto_increment</code>.
     */
    public final TableField<TypeInfoRecord, Boolean> AUTO_INCREMENT = createField("auto_increment", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>information_schema.type_info.minimum_scale</code>.
     */
    public final TableField<TypeInfoRecord, Short> MINIMUM_SCALE = createField("minimum_scale", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>information_schema.type_info.maximum_scale</code>.
     */
    public final TableField<TypeInfoRecord, Short> MAXIMUM_SCALE = createField("maximum_scale", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>information_schema.type_info.radix</code>.
     */
    public final TableField<TypeInfoRecord, Integer> RADIX = createField("radix", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>information_schema.type_info.pos</code>.
     */
    public final TableField<TypeInfoRecord, Integer> POS = createField("pos", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>information_schema.type_info.case_sensitive</code>.
     */
    public final TableField<TypeInfoRecord, Boolean> CASE_SENSITIVE = createField("case_sensitive", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>information_schema.type_info.nullable</code>.
     */
    public final TableField<TypeInfoRecord, Short> NULLABLE = createField("nullable", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>information_schema.type_info.searchable</code>.
     */
    public final TableField<TypeInfoRecord, Short> SEARCHABLE = createField("searchable", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * Create a <code>information_schema.type_info</code> table reference
     */
    public TypeInfo() {
        this(DSL.name("type_info"), null);
    }

    /**
     * Create an aliased <code>information_schema.type_info</code> table reference
     */
    public TypeInfo(String alias) {
        this(DSL.name(alias), TYPE_INFO);
    }

    /**
     * Create an aliased <code>information_schema.type_info</code> table reference
     */
    public TypeInfo(Name alias) {
        this(alias, TYPE_INFO);
    }

    private TypeInfo(Name alias, Table<TypeInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private TypeInfo(Name alias, Table<TypeInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeInfo as(String alias) {
        return new TypeInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeInfo as(Name alias) {
        return new TypeInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TypeInfo rename(String name) {
        return new TypeInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TypeInfo rename(Name name) {
        return new TypeInfo(name, null);
    }
}
