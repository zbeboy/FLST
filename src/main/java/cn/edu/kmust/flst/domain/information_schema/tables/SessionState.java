/*
 * This file is generated by jOOQ.
*/
package cn.edu.kmust.flst.domain.information_schema.tables;


import cn.edu.kmust.flst.domain.information_schema.InformationSchema;
import cn.edu.kmust.flst.domain.information_schema.tables.records.SessionStateRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SessionState extends TableImpl<SessionStateRecord> {

    private static final long serialVersionUID = 1335649294;

    /**
     * The reference instance of <code>information_schema.session_state</code>
     */
    public static final SessionState SESSION_STATE = new SessionState();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SessionStateRecord> getRecordType() {
        return SessionStateRecord.class;
    }

    /**
     * The column <code>information_schema.session_state.key</code>.
     */
    public final TableField<SessionStateRecord, String> KEY = createField("key", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>information_schema.session_state.sql</code>.
     */
    public final TableField<SessionStateRecord, String> SQL = createField("sql", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * Create a <code>information_schema.session_state</code> table reference
     */
    public SessionState() {
        this(DSL.name("session_state"), null);
    }

    /**
     * Create an aliased <code>information_schema.session_state</code> table reference
     */
    public SessionState(String alias) {
        this(DSL.name(alias), SESSION_STATE);
    }

    /**
     * Create an aliased <code>information_schema.session_state</code> table reference
     */
    public SessionState(Name alias) {
        this(alias, SESSION_STATE);
    }

    private SessionState(Name alias, Table<SessionStateRecord> aliased) {
        this(alias, aliased, null);
    }

    private SessionState(Name alias, Table<SessionStateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SessionState as(String alias) {
        return new SessionState(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SessionState as(Name alias) {
        return new SessionState(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SessionState rename(String name) {
        return new SessionState(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SessionState rename(Name name) {
        return new SessionState(name, null);
    }
}
